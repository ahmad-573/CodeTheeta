DATABASE NAME: ct_db

** CREATE TABLE **
create table solver(
	user_id      int not null auto_increment,
	full_name    varchar(100) not null,       
	username     varchar(100) not null,
	password     varchar(100) not null,
	points       int not null default 0,
	primary key(user_ID));

create table admin(
	admin_id int not null auto_increment,
	referral_id int,
	full_name varchar(100) not null,
	username varchar(100) not null,
	password varchar(100) not null,
	primary key(admin_id)
);

create table problem_set(
	problem_id int not null auto_increment,
	title varchar(100) not null,
	difficulty int not null,
	times_solved int not null default 0,
	statement longtext not null,
	test_case1 longtext not null,
	test_case2 longtext not null,
	output1 longtext not null, 
	output2 longtext not null,
	primary key(problem_id)
);

create table solved(
	user_id int not null,
	problem_id int not null,
	max_score int not null,
	primary key(user_id,problem_id),
	foreign key(problem_id) references problem_set(problem_id)
		on delete cascade
		on update cascade,
	foreign key(user_id) references solver(user_id)
		on delete cascade
		on update cascade
);

create table created(
	problem_id int not null,
	admin_id int not null,
	primary key(problem_id),
	foreign key(problem_id) references problem_set(problem_id)
		on delete cascade
		on update cascade,
	foreign key(admin_id) references admin(admin_id)
		on delete cascade
		on update cascade
);

create table comments(
	c_id int not null auto_increment,
	user_id int not null,
	content longtext not null,
	likes int not null default 0,
	dislikes int not null default 0,
	primary key(c_id),
	foreign key(user_id) references solver(user_id)
		on delete cascade
		on update cascade
);

create table liked(
	c_id int not null,
	user_id int not null,
	primary key(c_id,user_id)
	foreign key(c_id) references comments(c_id)
		on delete cascade
		on update cascade,
	foreign key(user_id) references solver(user_id)
		on delete cascade
		on update cascade
);

create table disliked(
	c_id int not null,
	user_id int not null,
	primary key(c_id,user_id),
	foreign key(c_id) references comments(c_id)
		on delete cascade
		on update cascade,
	foreign key(user_id) references solver(user_id)
		on delete cascade
		on update cascade
);

